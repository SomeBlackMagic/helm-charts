apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $.Release.Name }}
  annotations:
    #https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md#custom-max-body-size
    nginx.ingress.kubernetes.io/proxy-body-size: "500m"
    #https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md#rewrite
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  {{- if and $.Values.ingress.ingressClassName (eq "true" (include "common.ingress.supportsIngressClassname" $)) }}
  ingressClassName: {{ $.Values.ingress.ingressClassName | quote }}
  {{- end }}
  rules:
    - host: {{ $.Values.ingress.hostname | quote }}
      http:
        paths:
          - path: /allure-api/?(.*)
            pathType: Prefix
            backend:
              service:
                name: {{ $.Release.Name }}-server
                port:
                  number: 5050
          # Share your configuration if you have a better way to handle a static website
          - path: /allure-ui/?(.*)
            pathType: Prefix
            backend:
              service:
                name: {{ $.Release.Name }}-ui
                port:
                  number: 5252
          - path: /?(.*)
            pathType: Prefix
            backend:
              service:
                name: {{ $.Release.Name }}-ui
                port:
                  number: 5252
          {{- if $.Values.ingress.extraPaths }}
          {{- toYaml $.Values.ingress.extraPaths | nindent 10 }}
          {{- end }}
    {{- range $.Values.ingress.extraHosts }}
    - host: {{ .name | quote }}
      http:
        paths:
          - path: {{ default "/" .path }}
            {{- if eq "true" (include "common.ingress.supportsPathType" $) }}
            pathType: {{ default "ImplementationSpecific" .pathType }}
            {{- end }}
            backend: {{- include "common.ingress.backend" (dict "serviceName" $.Release.Name "servicePort" "http" "context" $) | nindent 14 }}
    {{- end }}
    {{- if $.Values.ingress.extraRules }}
    {{- include "common.tplvalues.render" (dict "value" $.Values.ingress.extraRules "context" $) | nindent 4 }}
    {{- end }}
  tls:
    {{- if and $.Values.ingress.tls (or (include "common.ingress.certManagerRequest" ( dict "annotations" $.Values.ingress.annotations )) $.Values.ingress.selfSigned (not (empty $.Values.ingress.secrets))) }}
    - hosts:
        - {{ $.Values.ingress.hostname | quote }}
      secretName: {{ $.Release.Name }}-{{ printf "%s-tls" $.Values.ingress.hostname | replace "." "-" }}
    {{- end }}
    {{- if $.Values.ingress.extraTls }}
    {{- include "common.tplvalues.render" (dict "value" $.Values.ingress.extraTls "context" $) | nindent 4 }}
    {{- end }}
