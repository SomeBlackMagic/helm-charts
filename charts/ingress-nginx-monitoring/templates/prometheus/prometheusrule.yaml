{{- if and $.Values.prometheus.enabled ( $.Capabilities.APIVersions.Has "monitoring.coreos.com/v1" ) }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ include "ingress-nginx-monitoring.fullname" . }}
  {{- if $.Values.prometheus.rule.namespace }}
  namespace: {{ $.Values.prometheus.rule.namespace }}
  {{- end }}
  labels:
    {{- include "ingress-nginx-monitoring.labels" $ | nindent 4 }}
    {{- if $.Values.prometheus.rule.additionalLabels }}
    {{- toYaml $.Values.prometheus.rule.additionalLabels | nindent 4 }}
    {{- end }}
spec:
  groups:
  - name: ingress-nginx
    rules:
    {{- if $.Values.prometheus.rule.alerts.configFailed.enabled }}
    - alert: NGINXConfigFailed
      expr: count(nginx_ingress_controller_config_last_reload_successful{controller_class=~"{{ $.Values.prometheus.rule.ingressClass}}"} == 0) > 0
      for: 1s
      labels:
        severity: "{{ $.Values.prometheus.rule.alerts.configFailed.severity }}"
      annotations:
        description: bad ingress config - nginx config test failed
        summary: uninstall the latest ingress changes to allow config reloads to resume
    {{- end }}

    {{- if $.Values.prometheus.rule.alerts.certificateExpiry.enabled }}
    - alert: NGINXCertificateExpiry
      expr: (avg(nginx_ingress_controller_ssl_expire_time_seconds{class=~"{{ $.Values.prometheus.rule.ingressClass}}"}) by (host) - time()) < 604800
      for: 1s
      labels:
        severity: "{{ $.Values.prometheus.rule.alerts.certificateExpiry.severity }}"
      annotations:
        description: {{`ssl certificate {{$labels.host}} will expire in less than a week`}}
        summary: renew expiring certificates to avoid downtime
    {{- end }}

    {{- if $.Values.prometheus.rule.alerts.tooMany500s.enabled }}
    - alert: NGINXTooMany500s
      expr: 100 * (sum by (ingress, exported_namespace, status, method, path, host) (rate(nginx_ingress_controller_requests{status=~"5.+", controller_class=~"{{ $.Values.prometheus.rule.ingressClass}}"}[2h])) / sum by (ingress, exported_namespace, status, method, path, host) (rate(nginx_ingress_controller_requests{controller_class=~"{{ $.Values.prometheus.rule.ingressClass}}"}[2h]))) > 10
      for: {{ $.Values.prometheus.rule.alerts.tooMany500s.for }}
      labels:
        severity: "{{ $.Values.prometheus.rule.alerts.tooMany500s.severity }}"
      annotations:
        description: {{`Too many {{$labels.status}} on {{$labels.host}} `}}
        summary: {{`{{ $.Values.prometheus.rule.alerts.tooMany500s.summary }}. Metadata -> { namespace="{{$labels.exported_namespace}}", ingress="{{$labels.ingress}}", method="{{$labels.method}}", path="{{$labels.path}})" } `}}
    {{- end }}

    {{- if $.Values.prometheus.rule.alerts.tooMany400s.enabled }}
    - alert: NGINXTooMany400s
      expr: 100 * (sum by (ingress, exported_namespace, status, method, path, host) (rate(nginx_ingress_controller_requests{status=~"4.+", controller_class=~"{{ $.Values.prometheus.rule.ingressClass}}"}[1h])) / sum by (ingress, exported_namespace, status, method, path, host) (rate(nginx_ingress_controller_requests{controller_class=~"{{ $.Values.prometheus.rule.ingressClass}}"}[1h]))) > 5
      for: 1m
      labels:
        severity: "{{ $.Values.prometheus.rule.alerts.tooMany400s.severity }}"
      annotations:
        description: {{`Too many {{$labels.status}} on {{$labels.host}} `}}
        summary: {{`More than 5% of all requests returned {{$labels.status}}. Metadata -> { namespace="{{$labels.exported_namespace}}", ingress="{{$labels.ingress}}", method="{{$labels.method}}", path="{{$labels.path}})" } `}}
    {{- end }}

    {{- with $.Values.prometheus.rule.additionalAlerts }}
    {{ . | nindent 6 }}
    {{- end }}
{{- end }}
{{- end }}
