apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "haproxy.fullname" . }}
  labels:
    {{- include "haproxy.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "haproxy.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "haproxy.name" . }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum | trunc 63 }}
    spec:
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: check-haproxy-config
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          volumeMounts:
            - name: config
              mountPath: /usr/local/etc/haproxy
              readOnly: true
          command: ["sh", "-c", "while true; do if haproxy -c -V -f /usr/local/etc/haproxy/haproxy.cfg; then echo 'HAProxy config is valid, continuing to start the pod'; break; else echo 'HAProxy config is not valid yet, waiting for Redis nodes'; sleep 2; fi; done;"]
      containers:
        - name: haproxy
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 8080
            - containerPort: 6379
            - containerPort: 6380
          volumeMounts:
            - name: config
              mountPath: /usr/local/etc/haproxy/haproxy.cfg
              subPath: haproxy.cfg
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: {{ include "haproxy.fullname" . }}-config
